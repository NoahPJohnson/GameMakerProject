<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_range_focus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
//Modes
longRange = true;
antiAir = false;

//Movement
hspd = 0;
vspd = 0;
jspeed = 13;
switched = false;
chsSpeed = 3;
chsSpeed_LR = 3;
chsSpeed_CR = 4;
destination_distance_LR = 300;
destination_distance_CR = 120;
jumping_type = false;
jumping = false;
dir = 0;
grv = 0.8;
frc = 0.5;
slope_mod = 2;

//Attacks
firing = false;
first_shot = true;
firSpeed = 36;
melee_dir = 0;
meleeAttack = false;
melee_hitbox = noone;
projectile = noone;
selected_projectile = noone;

//Damage and Hit Reaction
hit = false;
hitdir = 0;
old_speed = 0;
impetus = 1;
weight_factor = 1;
hitstun = false;
hitstun_direction = 0;
hitstop = false;
damage_hitstop = false;
old_state = e_state.idle;
alarm_array[0] = -1;
air_recovery = true;
stopped = true;
valid = false;

//Crash State
mxspd = 40;
hp = 4;
hp_max = 4;
crash_sprite = spr_enemy_crash;
cp = 2;
cp_max = 2;

state = e_state.idle
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Panic Run Ends
show_debug_message("Calm down.");
meleeAttack = false;
if (distance_to_object(obj_player) &lt; 300)
   {
    longRange = false;
   }
else 
   {
    longRange = true;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Panic Run 
show_debug_message("PANIC!!");
meleeAttack = true;
projectile = instance_create(x,y-32,obj_projectile_grenade);
dir = -sign(obj_player.x - x);
//hspd = dir * 8;
alarm[8] = room_speed * (35/60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump
if (place_meeting(x, y+1, obj_boundary))
   {
    //hspd = (hspd/2);
    //chsSpeed = 3.5;
    vspd = -jspeed;
   }
else
   {
    alarm[5] = room_speed * (94/60); 
   }           
       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit End
hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crash End
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Projectile
alarm[0] = -1;
//projectile = instance_create(x,y-32, obj_projectile_grenade);
firing = false;
if (longRange == true)
   {
    longRange = false;
   }
else
   {
    longRange = true;
   }
//sprite_index = spr_enemy;
//hspd = dir * chsSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitstun End
hit = false;
hitstun = false;
/*stopped = true;
speed = 0;
direction = 0;
state = e_state.idle*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop and Prepare to Fire
if (longRange == true)
   {
    selected_projectile = obj_projectile;
   }
else
   {
    selected_projectile = obj_projectile_ricochet_spread;
   }
   
if (firing == false)
   {
    firing = true;
   }
hspd = 0;

if (!collision_line(x,y,obj_player.x,obj_player.y,obj_boundary,false,false) &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,obj_enemy,false,true))
   {
    show_debug_message("Shoot! selected projectile is " + object_get_name(selected_projectile));
    projectile = instance_create(x,y, selected_projectile);
    //sprite_index = spr_player;
    if (firing == true &amp;&amp; longRange == true)
       {
        alarm[0] = room_speed * (18/60);
       }
    if (alarm[2] == -1)
       {
        alarm[2] = room_speed * (45/60);
       }
   }
else
   {
    projectile = instance_create(x,y-32, obj_projectile_grenade);
    if (alarm[2] == -1)
       {
        alarm[2] = room_speed * (30/60);
       }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch State
switch (state)
       {
        case e_state.idle: 
             {   
              scr_enemy(); 
              break;
             }
        case e_state.chase: 
             {
              scr_enemy_chase_range_focus(); 
              break;        
             }
        case e_state.hitstun:
             {
              scr_hit_stun();
              break;
             }
        case e_state.hitstop:
             {
              scr_hitstop();
              break;
             }
        case e_state.crash:
             {
              scr_crash();
              break;
             }
       }
       
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
