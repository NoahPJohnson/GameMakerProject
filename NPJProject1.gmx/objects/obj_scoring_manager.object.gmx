<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Scoring Variables
runs = 0; //Times the player has hit an enemy/ points based on hits and distance
balls = 0; //Times the player has hit a projectile
strikes = 0; //Times the player has gotten hit
//?outs = 0; //Every 3 strikes?
bases_array[0] = 0;
bases_array[1] = 0;
bases_array[2] = 0;
//bases_array[3] = 0;

sprites_array[0] = false;
sprites_array[1] = false;
sprites_array[2] = false;

out_time = room_speed * (270/60);

//alarm[0] = out_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Furthest runner goes out.
furthest = 0;
furthest_index = -1;
for (i = 0; i &lt; 3; i ++)
    {
     if (bases_array[i] &gt; furthest)
        {
         furthest = bases_array[i];
         furthest_index = i;
        }
    }
if (furthest_index &gt; -1)
   {
    bases_array[furthest_index] = 0;
    //show_debug_message("Out at base number: " + string(furthest_index) + " value: " + string(furthest));
   }
   
for (i = 0; i &lt; 3; i ++)
    {
     sprites_array[i] = false;
    }
    
for (i = 0; i &lt; 3; i ++)
    {
     //show_debug_message("Base: " + string(i) + " = " + string(bases_array[i]));
     if (bases_array[i] &gt; 0)
        {
         sprites_array[bases_array[i]-1] = true;
        }
    }   
if (bases_array[0] != 0 || bases_array[1] != 0 || bases_array[2] != 0)
   {
    alarm[0] = out_time;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scoring Runs 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_score_tracker_timer,1,view_xview[0]+1000, view_yview[0]+130, obj_scoring_manager.alarm[0]/obj_scoring_manager.out_time, obj_scoring_manager.alarm[0]/obj_scoring_manager.out_time, 0, c_white,1);
draw_sprite_ext(spr_score_tracker_ring,1,view_xview[0]+1000, view_yview[0]+130, 1, 1, 0, c_white,1);



draw_sprite_ext(spr_score_tracker_base,1,view_xview[0]+1000, view_yview[0]+60, 1, 1, 0, c_white, !obj_scoring_manager.sprites_array[1]);
draw_sprite_ext(spr_score_tracker_base,1,view_xview[0]+1070, view_yview[0]+130, 1, 1, 0, c_white,!obj_scoring_manager.sprites_array[0]);
draw_sprite_ext(spr_score_tracker_base,1,view_xview[0]+930, view_yview[0]+130, 1, 1, 0, c_white, !obj_scoring_manager.sprites_array[2]);

draw_sprite_ext(spr_score_tracker_base_occupied,1,view_xview[0]+1000, view_yview[0]+60, 1, 1, 0, c_white, obj_scoring_manager.sprites_array[1]);
draw_sprite_ext(spr_score_tracker_base_occupied,1,view_xview[0]+1070, view_yview[0]+130, 1, 1, 0, c_white,obj_scoring_manager.sprites_array[0]);
draw_sprite_ext(spr_score_tracker_base_occupied,1,view_xview[0]+930, view_yview[0]+130, 1, 1, 0, c_white, obj_scoring_manager.sprites_array[2]);



draw_sprite_ext(spr_score_tracker_ball_strike_empty,1,view_xview[0]+940, view_yview[0]+210, 1, 1, 0, c_white, 1);
draw_sprite_ext(spr_score_tracker_ball_strike_empty,1,view_xview[0]+940, view_yview[0]+250, 1, 1, 0, c_white, 1);

draw_sprite_ext(spr_score_tracker_strike,1,view_xview[0]+940, view_yview[0]+210, 1, 1, 0, c_white, (obj_scoring_manager.strikes &gt;= 1));
draw_sprite_ext(spr_score_tracker_strike,1,view_xview[0]+940, view_yview[0]+250, 1, 1, 0, c_white, (obj_scoring_manager.strikes &gt;= 2));


draw_sprite_ext(spr_score_tracker_ball_strike_empty,1,view_xview[0]+1060, view_yview[0]+210, 1, 1, 0, c_white, 1);
draw_sprite_ext(spr_score_tracker_ball_strike_empty,1,view_xview[0]+1060, view_yview[0]+250, 1, 1, 0, c_white, 1);
draw_sprite_ext(spr_score_tracker_ball_strike_empty,1,view_xview[0]+1060, view_yview[0]+290, 1, 1, 0, c_white, 1);

draw_sprite_ext(spr_score_tracker_ball,1,view_xview[0]+1060, view_yview[0]+210, 1, 1, 0, c_white, (obj_scoring_manager.balls &gt;= 1));
draw_sprite_ext(spr_score_tracker_ball,1,view_xview[0]+1060, view_yview[0]+250, 1, 1, 0, c_white, (obj_scoring_manager.balls &gt;= 2));
draw_sprite_ext(spr_score_tracker_ball,1,view_xview[0]+1060, view_yview[0]+290, 1, 1, 0, c_white, (obj_scoring_manager.balls &gt;= 3));



draw_sprite(spr_score_tracker_home_base,1,view_xview[0]+1000, view_yview[0]+200);

draw_set_font(fnt_score_font);
draw_text_transformed_colour(view_xview[0]+972, view_yview[0]+190, obj_scoring_manager.runs, 1, 1, 0,c_gray,c_black,c_black,c_black,1);
//draw_sprite_ext(spr_stamina_bar,1,view_xview[0]+15, view_yview[0]+45, obj_player.sp/100, 1, 0, c_white,1);
//draw_sprite(spr_stamina_bar_background,1,view_xview[0]+15, view_yview[0]+45);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
