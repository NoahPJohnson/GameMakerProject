<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_main_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Movement
hspd = 0;
vspd = 0;
jspeed = 0;
chsSpeed = 2;
jumping_type = false;
jumping = false;
dir = 0;
grv = 0.8;
frc = 0.5;
slope_mod = 2;

//Attacks
firing = false;
first_shot = true;
firSpeed = 40;
melee_dir = 0;
meleeAttack = false;
melee_hitbox = noone;
selected_projectile = noone;

//Damage and Hit Reaction
hit = false;
hitdir = 0;
old_speed = 0;
impetus = 1;
weight_factor = 1;
hitstun = false;
hitstun_direction = 0;
hitstop = false;
damage_hitstop = false;
old_state = boss_state.neutral;
alarm_array[0] = -1;
air_recovery = false;
stopped = true;
valid = false;

//Hit Points and other stats
max_hp = 20;
hp = max_hp;

//boss stuff
vulnerable = false;

pattern_count = 8;
pattern_index = 0;
pattern_array[0] = scr_boss_catcher_pattern_1;
pattern_array[1] = scr_boss_catcher_pattern_2;
pattern_array[2] = scr_boss_catcher_pattern_3;
pattern_array[3] = scr_boss_catcher_pattern_4;
pattern_array[4] = scr_boss_catcher_pattern_5;
pattern_array[5] = scr_boss_catcher_pattern_6;
pattern_array[6] = scr_boss_catcher_pattern_7;
pattern_array[7] = scr_boss_catcher_pattern_8;

pattern_selector_timer = room_speed * (45/60);
saved_pattern_selector_timer = pattern_selector_timer;
pattern_selected = true;

boss_starting_position_x = x;
boss_starting_position_y = y;

weakpoint = obj_boss_weakpoint;
weakpoint_position_x = weakpoint.x - x;
weakpoint_position_y = weakpoint.y - y;
weakpoint_distance = 0;
weakpoint_switch = true;

appendage = obj_boss_claw;
appendage_position_x = appendage.x - x;
appendage_position_y = appendage.y - y;
tractor_beam_range = 600;


hitstun_timer = room_speed * (60/60);
shot_timer = room_speed * (15/60);
saved_shot_timer = shot_timer;
shots_fired = 0;
destination = x;
destination_established = false;
max_shots = 0;
step = 0;

state = boss_state.neutral;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Placeholder alarm that alarm 0 can reference
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Hitstop
if (damage_hitstop == false)
   {
    show_debug_message("BOSS NOT IN DAMAGE HITSTOP: HP = " + string(hp) + " Old State = " + string(old_state));
    shot_timer = saved_shot_timer;
    //show_debug_message("Old State is " + string(old_state));
    damage_hitstop = false;
    hitstop = false;
    state = old_state;
    
    weakpoint.damage_hitstop = false;
    weakpoint.hitstop = false;
    weakpoint.state = state;
    appendage.damage_hitstop = false;
    appendage.hitstop = false;
    appendage.state = state;
    scr_boss_hp_zero();
   }
else
   {
    show_debug_message("Boss damage hitstop: HP = " + string(hp) + " Old State = " + string(old_state));
    shot_timer = 0;
    //show_debug_message("Old State is " + string(old_state));
    damage_hitstop = false;
    hitstop = false;
    state = boss_state.hitstun;
    
    weakpoint.damage_hitstop = false;
    weakpoint.hitstop = false;
    
    
    weakpoint.speed = (abs(weakpoint.old_speed) * weakpoint.hitdir) + (weakpoint.impetus * weakpoint.hitdir);
    weakpoint.direction = weakpoint.hitstun_direction;
    weakpoint.state = state;
       
    appendage.damage_hitstop = false;
    appendage.hitstop = false;
    appendage.state = state;
    scr_boss_hp_zero();
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch States
switch (state) 
       {
        case boss_state.neutral:
            {
             scr_boss_pattern_selector();
             break;
            }
        case boss_state.active:
            {
             script_execute(pattern_array[pattern_index]);
             break;
            }
        case boss_state.hitstop:
            {
             //show_debug_message("The boss is in hitstop.");
             scr_boss_hitstop();
             break;
            }
        case boss_state.hitstun:
            {
             //show_debug_message("The boss is in HITSTUN.");
             scr_boss_hitstun();
             break;
            }
       } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
