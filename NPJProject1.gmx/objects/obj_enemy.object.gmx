<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
//Movement
hspd = 0;
vspd = 0;
jspeed = 0;
chsSpeed = 2;
jumping_type = false;
jumping = false;
dir = 0;
grv = 0.8;
frc = 0.5;
slope_mod = 2;

//Attacks
firing = false;
first_shot = true;
firSpeed = 40;
melee_dir = 0;
meleeAttack = false;
melee_hitbox = noone;
selected_projectile = noone;

//Damage and Hit Reaction
hit = false;
hitdir = 0;
old_speed = 0;
impetus = 1;
weight_factor = 1;
hitstun = false;
hitstun_direction = 0;
hitstop = false;
damage_hitstop = false;
old_state = e_state.idle;
alarm_array[0] = -1;
air_recovery = false;
stopped = true;
valid = false;

slide_through = true;

//Crash State
mxspd = 40;
hp = 3;
hp_max = 3;
crash_sprite = spr_enemy_crash;
cp = 3;
cp_max = 3;

state = e_state.idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Hitstop
if (damage_hitstop == false)
   {
    for (i = 0; i &lt; 9 i++)
        {
         if (alarm[i] != noone)
            {
             //show_debug_message("alarm_array: " + string(i) + " = "/* + string(alarm_array[i])*/);
             alarm[i] = alarm_array[i];
            }
        }
    //show_debug_message("Old State is " + string(old_state));
    hitstop = false;
    state = old_state;
   }
else
   {
    speed = (abs(old_speed) * hitdir) + (impetus * hitdir);
    direction = hitstun_direction;
    if (old_state != e_state.crash)
       {
        alarm[1] = room_speed * (30/60);
        hitstun = true;
        scr_collision_bounce();
        state = e_state.hitstun;
       }
    else
       {
        show_debug_message("Crashed: Speed = " + string(speed) + " Direction = " + string(direction));
        scr_collision_bounce();
        state = e_state.crash;
       }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Melee Lunge Ends
hspd = dir * chsSpeed;
vspd = (min(7, vspd + grv));
grv = 0.8;
if (instance_exists(melee_hitbox))
   {   
    melee_hitbox.alarm[0] = room_speed * (1/60);
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Melee Lunge Begins
if (jumping_type = false)
   {
    if (!instance_exists(melee_hitbox))
       {
        /*if (obj_player.state != states.sliding)
           {
            dir = sign(obj_player.x - x);
           }*/
        if (melee_dir &lt; 0)
           {
            melee_hitbox = instance_create(x-30, y, obj_enemy_melee);
            //xoffset = -24;
           }
        else
           {
            melee_hitbox = instance_create(x+30, y, obj_enemy_melee);
            //xoffset = 24;
           }
        melee_hitbox.enemy_parent = self;
       }
    hspd = melee_dir * chsSpeed * 4;

    if (alarm[8] = -1)
       { 
        alarm[8] = room_speed * (25/60);
       }
   }
else
   {
    if (!place_meeting(x, y+1, obj_boundary) &amp;&amp; !place_meeting(x, y+1, obj_player))
       {
        if (!instance_exists(melee_hitbox))
           {
            if (obj_player.state != states.sliding)
               {
                melee_dir = sign(obj_player.x - x);
               }
            if (melee_dir &lt; 0)
               {
                melee_hitbox = instance_create(x-24, y+32, obj_enemy_divekick_hitbox);
                //xoffset = -24;
               }
            else
               {
                melee_hitbox = instance_create(x+24, y+32, obj_enemy_divekick_hitbox);
                //xoffset = 24;
               }
            melee_hitbox.enemy_parent = self;
           }
        jumped = true;   
        hspd = melee_dir * 4;
        vspd = 11;
        grv = 0.8;
        
        if (alarm[8] = -1)
           { 
            alarm[8] = room_speed * (20/60);
           }
       }    
   }    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit End
hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crash End
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Projectile
projectile = instance_create(x,y, obj_projectile);
firing = false;
//sprite_index = spr_enemy;
//hspd = dir * chsSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitstun End
hitstun = false;
hit = false;
//show_debug_message("Hitstun over.");
//sprite_index = spr_player_charging;
/*
stopped = true;
speed = 0;
direction = 0;
state = e_state.idle;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop and Prepare to Fire
firing = true;
hspd = 0;
//sprite_index = spr_player;
//alarm[0] = 53;
if (alarm[2] == -1)
   {  
    alarm[2] = room_speed * (20/60);
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch State
switch (state)
       {
        case e_state.idle: 
             {   
              scr_enemy(); 
              break;
             }
        case e_state.chase: 
             {
              scr_enemy_chase(); 
              break;        
             }
        case e_state.hitstun:
             {
              scr_hit_stun();
              break;
             }
        case e_state.hitstop:
             {
              scr_hitstop();
              break;
             }
        case e_state.crash:
             {
              scr_crash();
              break;
             }  
       }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
