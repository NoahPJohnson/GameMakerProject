<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_projectile_grenade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_boundary</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>crashed_enemy_meeting = noone;
hp = 2;
struck = false;
struck_speed = 0;
struck_direction = 0;
bunted = false;
state = proj_state.normal;
alarm[2] = room_speed * (75/60);
/*speed = 14;
if (distance_to_object(obj_player) &lt; 180)
   {
    if (obj_player.x &lt; x)
       {
        direction = 105;
       }
    else 
       {
        direction = 75;
       } 
   }
else if (distance_to_object(obj_player) &lt; 340)
   {
    if (obj_player.x &lt; x)
       {
        if (obj_player.y &lt; y -32)
           {
            speed += 2;
           }
        direction = 120;
       }
    else 
       {
        if (obj_player.y &lt; y -32)
           {
            speed += 2;
           }
        direction = 60;
       } 
   }
else //if (distance_to_object(obj_player) &lt; 400)
   {
    if (obj_player.x &lt; x)
       {
        //direction = 135;
        if (obj_player.y &lt; y -32)
           {
            speed += 2;
            direction = 125;
           }
        else
           {
            direction = 135;
           }
       }
    else 
       {
        //direction = 45;
        if (obj_player.y &lt; y -32)
           {
            speed += 2;
            direction = 55;
           }
        else
           {
            direction = 45;
           }
       } 
   }*/
   
projectile_normal_sprite = spr_projectile_grenade;
projectile_short_fuse_sprite = spr_projectile_grenade2;
projectile_returned_sprite = spr_projectile_grenade_returned;
projectile_short_fuse_returned_sprite = spr_projectile_grenade2_returned;

update_angle = false;

shot_hit_sparks[0] = obj_shot_hit_spark;
shot_hit_sparks[1] = obj_shot_armor_hit_spark;
shot_hit_sparks[2] = obj_shot_returned_hit_spark;

slope_sprite = -1;
sprite_array = -1;
boundary_index = -1;

selected_hit_spark = noone;
spark_index = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detonate
instance_create(x,y,obj_explosion_hitbox);
if (instance_exists(obj_music_sfx_manager))
{
    with (obj_music_sfx_manager) 
    {
        scr_prompt_sound(snd_explosion_medium_SFX,other,false);    
    }
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Hitstop
if (instance_exists(obj_test) &amp;&amp; bunted == false)
   {
    target = instance_nearest(obj_player.x, obj_player.y, obj_test);
    enemy_targeted = instance_place(target.x,target.y, obj_enemy);         
    move_towards_point(enemy_targeted.x, enemy_targeted.y, struck_speed);
   }
else
   {
    direction = struck_direction; 
    speed = struck_speed;//15 + (obj_player.chargeOne * 5) + (obj_player.chargeTwo * 10);
   }
state = proj_state.struck;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch State
switch (state)
       {
        case proj_state.normal: 
             {   
              scr_grenade_projectile(); 
              break;
             }
        case proj_state.struck: 
             {
              scr_projectile_grenade_struck(); 
              break;        
             }
        case proj_state.hitstop:
             {
              scr_projectile_hitstop();
              break;
             }
        case proj_state.destroyed: 
             {
              scr_projectile_destroyed(); 
              break;        
             }
       }
       
//Animations
scr_projectile_animation_controller();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
