<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shield_right</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_boundary</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_parent = noone;
//spin = 0;

struck = false;
impetus = 0;
hitstun_direction = 0;

old_sprite = sprite_index;

damage_hitstop = false;
hitstop = false;
old_state = shield_state.active;
alarm_array[0] = -1;

stop = false;
old_X = 0;
old_Y = 0;

//0 = left, 1 = up, 2 = right
shield_hitstun = false;
enemy_parent_hitbox = obj_melee_hitbox_long_2;
old_guard_position = 2; 
guard_position = 2;

shield_right_sprite = spr_shield_right;
shield_left_sprite = spr_shield_left;
shield_up_sprite = spr_shield_up;

slope_sprite = -1;
sprite_array = -1;
boundary_index = -1;

//ANGLE_INCREMENT = 7;
//radius = point_distance(center_X, center_Y, x, y);
//phase = point_direction(center_X, center_Y, x, y);

state = shield_state.active;
//alarm[0] = room_speed * (45/60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shield Hitstun is over
shield_hitstun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Reversal
struck = false;
speed = 0;
direction = 0;
state = ball_n_chain_state.neutral;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Hitstop
if (damage_hitstop == false)
   {
    speed = 0;
    direction = 0;
    for (i = 0; i &lt; 5 i++)
        {
         if (alarm[i] != noone)
            {
             if (i != 3)
                {
                 //show_debug_message("alarm_array: " + string(i) + " = "/* + string(alarm_array[i])*/);
                 alarm[i] = alarm_array[i];
                }
            }
        }
    show_debug_message("shield's old State is " + string(old_state));
    hitstop = false;
    damage_hitstop = false;
    state = old_state;
   }
else
   {
    hitstop = false;
    damage_hitstop = false;
    instance_destroy();
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End Stop
speed = 0;
direction = 0;
radius = 80;
stop = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Guard Position
if (guard_position == 0)
   {
    //show_debug_message("Change it to shield L!");
    //object_set_sprite(self,spr_enemy_shield_L);
    sprite_index = shield_left_sprite;
   }
else if (guard_position == 1)
   {
    //object_set_sprite(self,spr_enemy_shield_Up);
    sprite_index = shield_up_sprite;
   }
else if (guard_position == 2)
   {
    //object_set_sprite(self,spr_enemy_shield_R);
    sprite_index = shield_right_sprite;
   }
   
if (sprite_index == shield_left_sprite)
   {
    //sprite_index = spr_enemy_shield_L;
    x = enemy_parent.x - 48;
    y = enemy_parent.y-48;
   }
else if (sprite_index == shield_up_sprite)
   {
    //sprite_index = spr_enemy_shield_Up;
    x = enemy_parent.x;
    y = enemy_parent.y-48;
   }
else if (sprite_index == shield_right_sprite)
   {
    //sprite_index = spr_enemy_shield_R;
    x = enemy_parent.x + 48;
    y = enemy_parent.y-48;
   }

if (place_meeting(x,y,obj_player) || place_meeting(x,y,enemy_parent_hitbox) || shield_hitstun == true)
   {
    show_debug_message("Shield overlapping!!!");
    guard_position = old_guard_position;
    sprite_index = old_sprite;
    x = old_X;
    y = old_Y;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch State
//scr_shield();
switch (state)
       {
        case shield_state.active: 
             {   
              scr_shield(); 
              break;
             }
        case shield_state.hitstop:
             {
              //shield_hitstop();
              break;
             }
       }
       



   


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
